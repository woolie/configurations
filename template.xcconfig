// === Architectures ===

ADDITIONAL_SDKS
ARCHS
SDKROOT
ONLY_ACTIVE_ARCH
SUPPORTED_PLATFORMS
VALID_ARCHS

// === Assets ===

ASSET_PACK_MANIFEST_URL_PREFIX
EMBED_ASSET_PACKS_IN_PRODUCT_BUNDLE
ENABLE_ON_DEMAND_RESOURCES
ON_DEMAND_RESOURCES_INITIAL_INSTALL_TAGS
ON_DEMAND_RESOURCES_PREFETCH_ORDER

// === Build Locations ===

SYMROOT
OBJROOT
CONFIGURATION_BUILD_DIR
CONFIGURATION_TEMP_DIR
SHARED_PRECOMPS_DIR

// === Build Options ===

BUILD_VARIANTS
GCC_VERSION
DEBUG_INFORMATION_FORMAT
EMBEDDED_CONTENT_CONTAINS_SWIFT
ENABLE_TESTABILITY
GENERATE_PROFILING_CODE
PRECOMPS_INCLUDE_HEADERS_FROM_BUILT_PRODUCTS_DIR
APPLICATION_EXTENSION_API_ONLY
SCAN_ALL_SOURCE_FILES_FOR_INCLUDES
VALIDATE_PRODUCT

// == Code Signing ===

CODE_SIGN_IDENTITY
CODE_SIGN_ENTITLEMENTS
CODE_SIGN_IDENTITY
CODE_SIGN_RESOURCE_RULES_PATH
OTHER_CODE_SIGN_FLAGS
PROVISIONING_PROFILE

// === Deployment ===

STRIPFLAGS
ALTERNATE_GROUP
ALTERNATE_OWNER
ALTERNATE_MODE
ALTERNATE_PERMISSIONS_FILES
COMBINE_HIDPI_IMAGES
DEPLOYMENT_LOCATION
DEPLOYMENT_POSTPROCESSING
INSTALL_GROUP
INSTALL_OWNER
INSTALL_MODE_FLAG
DSTROOT
INSTALL_PATH
MACOSX_DEPLOYMENT_TARGET
PRODUCT_DEFINITION_PLIST
RESOURCES_TARGETED_DEVICE_FAMILY
SKIP_INSTALL
COPY_PHASE_STRIP
STRIP_INSTALLED_PRODUCT
STRIP_STYLE
SEPARATE_STRIP
IPHONEOS_DEPLOYMENT_TARGET
TVOS_DEPLOYMENT_TARGET
WATCHOS_DEPLOYMENT_TARGET

// === Headers ===

COPY_HEADERS_RUN_UNIFDEF
COPY_HEADERS_UNIFDEF_FLAGS

// === Kernel Modules ===

MODULE_NAME
MODULE_START
MODULE_STOP
MODULE_VERSION

// === Linking ===

BUNDLE_LOADER
DYLIB_COMPATIBILITY_VERSION
DYLIB_CURRENT_VERSION
DEAD_CODE_STRIPPING
LINKER_DISPLAYS_MANGLED_NAMES
PRESERVE_DEAD_CODE_INITS_AND_TERMS
LD_DYLIB_INSTALL_NAME
DYLIB_INSTALL_NAME_BASE
EXPORTED_SYMBOLS_FILE
LD_NO_PIE
INIT_ROUTINE
LINK_WITH_STANDARD_LIBRARIES
MACH_O_TYPE
ORDER_FILE
OTHER_LIBTOOLFLAGS
OTHER_LDFLAGS
OTHER_TAPI_FLAGS
LD_MAP_FILE_PATH
GENERATE_MASTER_OBJECT_FILE
PRELINK_LIBS
KEEP_PRIVATE_EXTERNS
LD_QUOTE_LINKER_ARGUMENTS_FOR_COMPILER_DRIVER
REEXPORTED_FRAMEWORK_NAMES
REEXPORTED_LIBRARY_NAMES
REEXPORTED_LIBRARY_PATHS
LD_RUNPATH_SEARCH_PATHS
SEPARATE_SYMBOL_EDIT
PRELINK_FLAGS
SUPPORTS_TEXT_BASED_API
SECTORDER_FLAGS
TEXT_BASED_API_FILE
TAPI_VERIFY_MODE
UNEXPORTED_SYMBOLS_FILE
WARNING_LDFLAGS
LD_GENERATE_MAP_FILE

// === Packaging ===

APPLY_RULES_IN_COPY_FILES
CREATE_INFOPLIST_SECTION_IN_BINARY
DEFINES_MODULE
EXECUTABLE_EXTENSION
EXECUTABLE_PREFIX
INFOPLIST_EXPAND_BUILD_SETTINGS
GENERATE_PKGINFO_FILE
FRAMEWORK_VERSION
INFOPLIST_FILE
INFOPLIST_OTHER_PREPROCESSOR_FLAGS
INFOPLIST_OUTPUT_FORMAT
INFOPLIST_PREPROCESSOR_DEFINITIONS
INFOPLIST_PREFIX_HEADER
MODULEMAP_FILE
INFOPLIST_PREPROCESS
COPYING_PRESERVES_HFS_DATA
PRIVATE_HEADERS_FOLDER_PATH
MODULEMAP_PRIVATE_FILE
PRODUCT_BUNDLE_IDENTIFIER
PRODUCT_MODULE_NAME
PRODUCT_NAME
PLIST_FILE_OUTPUT_FORMAT
PUBLIC_HEADERS_FOLDER_PATH
STRINGS_FILE_OUTPUT_ENCODING
WRAPPER_EXTENSION

// === Search Paths ===

ALWAYS_SEARCH_USER_PATHS
FRAMEWORK_SEARCH_PATHS
HEADER_SEARCH_PATHS
LIBRARY_SEARCH_PATHS
REZ_SEARCH_PATHS
EXCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES
INCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES
USE_HEADERMAP
USER_HEADER_SEARCH_PATHS

// === Testing ===

TEST_HOST
TREAT_MISSING_BASELINES_AS_TEST_FAILURES

// === Versioning ===

CURRENT_PROJECT_VERSION
VERSION_INFO_FILE
VERSION_INFO_EXPORT_DECL
VERSION_INFO_PREFIX
VERSION_INFO_SUFFIX
VERSIONING_SYSTEM
VERSION_INFO_BUILDER

// === Apple LLVM 7.1 - Address Sanitizer ===

CLANG_ADDRESS_SANITIZER_CONTAINER_OVERFLOW

// === Apple LLVM 7.1 - Code Generation ===

CLANG_DEBUG_INFORMATION_LEVEL
CLANG_X86_VECTOR_INSTRUCTIONS
CLANG_ENABLE_CODE_COVERAGE
GCC_STRICT_ALIASING
GCC_GENERATE_DEBUGGING_SYMBOLS
GCC_DYNAMIC_NO_PIC
GCC_GENERATE_TEST_COVERAGE_FILES
GCC_INLINES_ARE_PRIVATE_EXTERN
GCC_INSTRUMENT_PROGRAM_FLOW_ARCS
GCC_ENABLE_KERNEL_DEVELOPMENT
LLVM_LTO
GCC_REUSE_STRINGS
GCC_NO_COMMON_BLOCKS
GCC_OPTIMIZATION_LEVEL
CLANG_OPTIMIZATION_PROFILE_FILE
GCC_FAST_MATH
GCC_THREADSAFE_STATICS
GCC_SYMBOLS_PRIVATE_EXTERN
GCC_UNROLL_LOOPS
CLANG_USE_OPTIMIZATION_PROFILE

// === Apple LLVM 7.1 - Custom Compiler Flags ===

OTHER_CFLAGS
OTHER_CPLUSPLUSFLAGS
WARNING_CFLAGS

// === Apple LLVM 7.1 - Language ===

GCC_CHAR_IS_UNSIGNED_CHAR
GCC_ENABLE_ASM_KEYWORD
GCC_C_LANGUAGE_STANDARD
GCC_CW_ASM_SYNTAX
GCC_INPUT_FILETYPE
GCC_LINK_WITH_DYNAMIC_LIBRARIES
GCC_ENABLE_TRIGRAPHS
GCC_ENABLE_FLOATING_POINT_LIBRARY_CALLS
GCC_INCREASE_PRECOMPILED_HEADER_SHARING
GCC_PRECOMPILE_PREFIX_HEADER
GCC_PREFIX_HEADER
GCC_ENABLE_BUILTIN_FUNCTIONS
GCC_ENABLE_PASCAL_STRINGS
GCC_SHORT_ENUMS
GCC_USE_STANDARD_INCLUDE_SEARCHING

// === Apple LLVM 7.1 - Language - C++ ===

CLANG_CXX_LANGUAGE_STANDARD
CLANG_CXX_LIBRARY
GCC_ENABLE_CPP_EXCEPTIONS
GCC_ENABLE_CPP_RTTI

// === Apple LLVM 7.1 - Language - Modules ===

CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES
CLANG_ENABLE_MODULE_DEBUGGING
CLANG_ENABLE_MODULES
CLANG_MODULES_AUTOLINK

// === Apple LLVM 7.1 - Language - Objective C ===

GCC_ENABLE_OBJC_EXCEPTIONS
CLANG_LINK_OBJC_RUNTIME
CLANG_ENABLE_OBJC_ARC
CLANG_ENABLE_OBJC_WEAK

// === Apple LLVM 7.1 - Preprocessor ===

ENABLE_NS_ASSERTIONS
ENABLE_STRICT_OBJC_MSGSEND
GCC_PREPROCESSOR_DEFINITIONS
GCC_PREPROCESSOR_DEFINITIONS_NOT_USED_IN_PRECOMPS

// === Apple LLVM 7.1 - Warning Policies ===

GCC_WARN_INHIBIT_ALL_WARNINGS
GCC_WARN_PEDANTIC
GCC_TREAT_WARNINGS_AS_ERRORS

// === Apple LLVM 7.1 - Warnings - All Languages ===

GCC_WARN_CHECK_SWITCH_STATEMENTS
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS
CLANG_WARN_DOCUMENTATION_COMMENTS
CLANG_WARN_EMPTY_BODY
GCC_WARN_FOUR_CHARACTER_CONSTANTS
GCC_WARN_SHADOW
CLANG_WARN_BOOL_CONVERSION
CLANG_WARN_CONSTANT_CONVERSION
GCC_WARN_64_TO_32_BIT_CONVERSION
CLANG_WARN_ENUM_CONVERSION
CLANG_WARN_INT_CONVERSION
CLANG_WARN_IMPLICIT_SIGN_CONVERSION
CLANG_WARN_NULLABLE_TO_NONNULL_CONVERSION
GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED
GCC_WARN_ABOUT_RETURN_TYPE_ERROR
GCC_WARN_MISSING_PARENTHESES
GCC_WARN_ABOUT_MISSING_FIELD_INITIALIZERS
GCC_WARN_ABOUT_MISSING_PROTOTYPES
GCC_WARN_ABOUT_MISSING_NEWLINE
CLANG_WARN_ASSIGN_ENUM
GCC_WARN_ABOUT_POINTER_SIGNEDNESS
GCC_WARN_SIGN_COMPARE
CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION
GCC_TREAT_INCOMPATIBLE_POINTER_TYPE_WARNINGS_AS_ERRORS
GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS
GCC_WARN_TYPECHECK_CALLS_TO_PRINTF
GCC_WARN_UNINITIALIZED_AUTOS
GCC_WARN_UNKNOWN_PRAGMAS
CLANG_WARN_UNREACHABLE_CODE
GCC_WARN_UNUSED_FUNCTION
GCC_WARN_UNUSED_LABEL
GCC_WARN_UNUSED_PARAMETER
GCC_WARN_UNUSED_VALUE
GCC_WARN_UNUSED_VARIABLE

// === Apple LLVM 7.1 - Warnings - C++ ===

CLANG_WARN__EXIT_TIME_DESTRUCTORS
GCC_WARN_NON_VIRTUAL_DESTRUCTOR
GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS
GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO
CLANG_WARN_CXX0X_EXTENSIONS

// === Apple LLVM 7.1 - Warnings - Objective C ===

CLANG_WARN_DIRECT_OBJC_ISA_USAGE
CLANG_WARN__DUPLICATE_METHOD_MATCH
CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES
CLANG_WARN_OBJC_MISSING_PROPERTY_SYNTHESIS
GCC_WARN_ALLOW_INCOMPLETE_PROTOCOL
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS
GCC_WARN_STRICT_SELECTOR_MATCH
GCC_WARN_UNDECLARED_SELECTOR
CLANG_WARN_OBJC_ROOT_CLASS

// === Apple LLVM 7.1 - Warnings - Objective C and ARC ===

CLANG_WARN_OBJC_EXPLICIT_OWNERSHIP_TYPE
CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF
CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK
CLANG_WARN__ARC_BRIDGE_CAST_NONARC

// === Asset Catalog Compiler - Options ===

ASSETCATALOG_COMPILER_APPICON_NAME
ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME
ASSETCATALOG_OTHER_FLAGS
ENABLE_ONLY_ACTIVE_RESOURCES
ENABLE_INCREMENTAL_DISTILL
ASSETCATALOG_COMPILER_OPTIMIZATION
ASSETCATALOG_NOTICES
ASSETCATALOG_WARNINGS

// === Interface Builder XIB Compiler - Options ===

IBC_COMPILER_AUTO_ACTIVATE_CUSTOM_FONTS
IBC_FLATTEN_NIBS
IBC_OTHER_FLAGS
IBC_ERRORS
IBC_NOTICES
IBC_WARNINGS

// === OSACompiler - Build Options ===

OTHER_OSACOMPILEFLAGS
OSACOMPILE_EXECUTE_ONLY

// === Static Analyzer - Analysis Policy ===

RUN_CLANG_STATIC_ANALYZER
CLANG_STATIC_ANALYZER_MODE_ON_ANALYZE_ACTION
CLANG_STATIC_ANALYZER_MODE

// === Static Analyzer - Generic Issues ===

CLANG_ANALYZER_DEADCODE_DEADSTORES
CLANG_ANALYZER_MEMORY_MANAGEMENT
CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED
CLANG_ANALYZER_LOCALIZABILITY_EMPTY_CONTEXT
CLANG_ANALYZER_NONNULL
CLANG_ANALYZER_GCD

// === Static Analyzer - Issues - Objective C ===

CLANG_ANALYZER_OBJC_ATSYNC
CLANG_ANALYZER_OBJC_NSCFERROR
CLANG_ANALYZER_OBJC_INCOMP_METHOD_TYPES
CLANG_ANALYZER_OBJC_COLLECTIONS
CLANG_ANALYZER_OBJC_GENERICS
CLANG_ANALYZER_OBJC_UNUSED_IVARS
CLANG_ANALYZER_OBJC_SELF_INIT
CLANG_ANALYZER_OBJC_RETAIN_COUNT

// === Static Analyzer - Issues - Security ===

CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER
CLANG_ANALYZER_SECURITY_KEYCHAIN_API
CLANG_ANALYZER_SECURITY_INSECUREAPI_UNCHECKEDRETURN
CLANG_ANALYZER_SECURITY_INSECUREAPI_GETPW_GETS
CLANG_ANALYZER_SECURITY_INSECUREAPI_MKSTEMP
CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND
CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY
CLANG_ANALYZER_SECURITY_INSECUREAPI_VFORK

// === Swift Compiler - Code Generation ===

SWIFT_DISABLE_SAFETY_CHECKS
SWIFT_INSTALL_OBJC_HEADER
SWIFT_OBJC_BRIDGING_HEADER
SWIFT_OBJC_INTERFACE_HEADER_NAME
SWIFT_OPTIMIZATION_LEVEL

// === Swift Compiler - Custom Flags ===

OTHER_SWIFT_FLAGS

// === Swift Compiler - Search Paths ===

SWIFT_INCLUDE_PATHS

// === User Defined ===
